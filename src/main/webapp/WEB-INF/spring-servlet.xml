<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<context:annotation-config />


	<context:component-scan base-package="com.elecnor.issue.tracker" />

	<mvc:resources mapping="/assets/img/**" location="/assets/img/" />
	<mvc:resources mapping="/assets/js/**" location="/assets/js/" />
	<mvc:resources mapping="/assets/css/**" location="/assets/css/" />
	<mvc:resources mapping="/assets/fonts/**" location="/assets/fonts/" />
	<mvc:resources mapping="/assets/less/**" location="/assets/less/" />
	<mvc:resources mapping="/assets/scss/**" location="/assets/scss/" />
	<mvc:annotation-driven />



	<!-- also add the following beans to get rid of some exceptions -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- uncomment this only if you are using the Spring Exception Handling.. -->
	<!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key="java.lang.Exception">error</prop> 
		<prop key="<Your Generic Exception Class>">GenericExceptionPage</prop> </props> 
		</property> </bean> -->

	<!-- this bean for upload a file @Siva Sankar -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="15728640" />
	</bean>

	<!-- Adding Interceptor For Session Checks -->
	<mvc:interceptors>
		<bean class="com.elecnor.issue.tracker.interceptor.IssueTrackerInterceptor" />
		<bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">  <!--to clear cache after logout -->
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="false" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
		</bean>
	</mvc:interceptors>

	<bean id="urlviewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1"></property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="0"></property>
	</bean>

	<!-- To use file upload jar -->
	<!-- <bean id="fileUploadServiceImpl" class="com.file.handler.serviceImpl.FileUploadServiceImpl"/> 
		<bean id="fileUploadDaoImpl" class="com.file.handler.daoImpl.FileUploadDaoImpl"/> -->

	<!-- This required only if you are using a property file to display the 
		Message Or Field Label -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> 
		<property name="basename" value="classpath:messages" /> <property name="defaultEncoding" 
		value="UTF-8" /> </bean> 

	<!-- This is to define your Property file which will have your JDBC properties. 
		(This file needs to be in your classpath) -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="classpath:${ENV_MODE}.application.properties" />



	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${app.jdbc.driverClassName}"
		p:url="${app.jdbc.databaseurl}" p:username="${app.jdbc.username}"
		p:password="${app.jdbc.password}" />


	<!-- Using C3PO connection pooling, It can also be handled by Hibernate. 
		(Its recommend to use the c3po connection pooling for production environment.) -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		<!--<property name="configurationClass"> <value>org.hibernate.cfg.Configuration</value> 
			</property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${app.jdbc.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.connection.autoReconnect">true</prop>
				<prop key="connection.autoReconnectForPools">true</prop>
				<prop key="connection.is-connection-validation-required">true</prop>
				<prop key="hibernate.c3p0.minPoolSize">5</prop>
				<prop key="hibernate.c3p0.maxPoolSize">100</prop>
				<prop key="hibernate.c3p0.timeout">1800</prop>
				<prop key="hibernate.c3p0.max_statement">55</prop>
				<prop key="hibernate.c3p0.idle_test_period">2000</prop>
				<prop key="hibernate.c3p0.numHelperThreads">20</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="500" />
	</bean>

	<!-- Start configuration of File Handler Utility -->
	<import resource="classpath:/upload-servlet.xml" />
	<!-- End configuration of File Handler Utility -->

	<!-- Start configuration of Email Utility -->
	<!-- <bean id="emailHandlerService" class="com.email.utility.serviceimpl.EmailNotificationServiceImpl"> 
		</bean> <bean id="emailHandlerDao" class="com.email.utility.daoimpl.EmailNotificationDaoImpl"> 
		</bean> -->
	<!-- <bean id="emailSender" class="com.email.utility.util.EmailSender"> 
		</bean> -->

	<import resource="classpath:/email-util-servlet.xml" />
	<bean id="emailHandlerThread" class="com.email.utility.executor.EmailTaskExecutor">
		<constructor-arg ref="taskExecutor" />
	</bean>
	<!-- End configuration of Email Utility -->

</beans>